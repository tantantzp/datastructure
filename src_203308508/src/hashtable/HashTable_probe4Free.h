/******************************************************************************************
 * Data Structures in C++
 * ISBN: 7-302-26883-3 & 7-302-29652-2
 * Junhui DENG, deng@tsinghua.edu.cn
 * Computer Science & Technology, Tsinghua University
 * Copyright (c) 2011. All rights reserved.
 ******************************************************************************************/

#pragma once

/******************************************************************************************
 * 沿关键码k对应的查找链，找到首个可用空桶（仅供插入条目时调用）
 * 返回时，或者查找命中，或抵达查找链末端――（无论是否带有LazyMark标记的）空桶
 * 试探算法多种多样，可灵活选取；这里仅以线性试探为例
 ******************************************************************************************/
template <typename K, typename V> int Hashtable<K, V>::probe4Free(const K& k) {
   int r = hashCode(k) % M; //采用除余法确定首个试探的桶单元地址
   //*DSA*/printf(" ->%d", r); //首个试探的桶单元地址
   while (ht[r]) r = (r + 1) % M; //沿查找链线性试探，找到第一个空桶（无论是否有懒惰删除标记）
//*DSA*/   while (ht[r]) { r = (r+1) % M; printf(" ->%d", r); } printf("\n");
   return r; //调用者根据ht[r]是否为空，即可判断查找是否成功
}
