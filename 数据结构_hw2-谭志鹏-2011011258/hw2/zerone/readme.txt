/*******************************************************************************
 * 在完成本作业的过程中，我从以下各位那里得到过以下方面的启发和帮助：
 *    【周昕宇】  【自底而上判断胜负的思路】
 * 在我提交的程序中，还在对应的位置以注释形式记录了他们的具体帮助。
 *******************************************************************************
 * 我参考了以下资料：
 *     【数据结构】   【数的实现】
 * 在我提交的程序中，还在对应的位置以注释形式记录了具体的参考内容。
 *******************************************************************************
 * 我独立完成了本程序除以上方面之外的所有工作，包括分析、设计、编码、调试与测试。
 * 我清楚地知道，从以上方面获得的信息在一定程度上降低了作业难度，可能影响起评分。
 *******************************************************************************
 * 我从未抄袭或盗用过他人的程序，不管是原封不动地复制，还是经过了某些等价转换。
 * 我未曾也不会向同一课程（包括此后各届）的同学复制或公开我这份程序的代码。
 * 我编写这个程序无意于破坏或妨碍任何计算机系统的正常运转。
 * 我清楚地知道，以上情况均为本课程纪律所禁止，若违反，对应的作业成绩将按-100计。
 *******************************************************************************
 * 【姓名】谭志鹏
 * 【学号】2011011258
 * 【日期】2012.11
 ******************************************************************************/
    对于该问题，我运用了编码树作为数据结构来储存01串。困扰较久的问题在于新加入一串后如何快速判断胜负。
    在周昕宇的提示下，我考虑运用递归的思想，每加入一个新树枝便自底而上更新节点胜负信息。其中胜负信息指如果“我”站在这个节点能不能赢。作为边界，站在叶子节点时必胜，从而自底而上迭代更新信息。
    没加入一串后更新节点胜负信息仅需常数时间，总复杂度为O(n),空间复杂度也为O(n)。
